<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <SolidColorBrush x:Key="ListBorder" Color="#828790"/>

    <Style TargetType="{x:Type TextBlock}" x:Key="WrappingStyle">
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

   <!-- Arrow -->

    <PathGeometry x:Key="TreeArrow" Figures="M7.06 0.726562L4 3.7799L0.94 0.726562L0 1.66656L4 5.66656L8 1.66656L7.06 0.726562Z"/>
    
   <!-- Expander -->
   
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="20" Width="20">
                        <Path x:Name="ExpandPath" 
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Data="{StaticResource TreeArrow}"
                              Fill="#E2E2E2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath"
                                    Value="M1.5575 5.5575L5 2.1225L8.4425 5.5575L9.5 4.5L5 0L0.5 4.5L1.5575 5.5575Z">
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   <!-- TreeViewStyle -->
 
    <Style x:Key="TreeViewStyle1" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="LightBlue"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd"
                            CornerRadius="8"
                            SnapsToDevicePixels="true">
                        <Border CornerRadius="8">
                        <Border.Clip>
                            <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                <Binding Path="ActualWidth"
                                                     RelativeSource="{RelativeSource Self}"/>
                                <Binding Path="ActualHeight"
                                                     RelativeSource="{RelativeSource Self}"/>
                                <Binding Path="CornerRadius"
                                                     RelativeSource="{RelativeSource Self}"/>
                            </MultiBinding>
                        </Border.Clip>
                        <ScrollViewer x:Name="_tv_scrollviewer_" 
                                      Background="#121F30"
                                      CanContentScroll="false"
                                      Focusable="false"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
   
   <!-- TreeViewItemStyle -->

    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="0"
                                              Width="32"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="36" Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ExpandCollapseToggleStyle}"
                                      VerticalAlignment="Center"/>
                        <Border x:Name="Bd"
                                Grid.Column="1"
                                BorderBrush="Red"
                                SnapsToDevicePixels="true">
                                <TextBlock TextWrapping="Wrap"
                                           DockPanel.Dock="Left"
                                           VerticalAlignment="Center">
                                    <ContentPresenter x:Name="PART_Header"
                                                      ContentSource="Header"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource WrappingStyle}"/>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </TextBlock>
                        </Border>
                        <Path Data="M8.27136    0.161011C4.52136 0.161011 1.31886 2.49351 0.0213623 5.78601C1.31886 9.07851 4.52136 11.411 8.27136 11.411C12.0214 11.411 15.2239 9.07851 16.5214 5.78601C15.2239 2.49351 12.0214 0.161011 8.27136 0.161011ZM8.27136 9.53601C6.20136 9.53601 4.52136 7.85601 4.52136 5.78601C4.52136 3.71601 6.20136 2.03601 8.27136 2.03601C10.3414 2.03601 12.0214 3.71601 12.0214 5.78601C12.0214 7.85601 10.3414 9.53601 8.27136 9.53601ZM8.27136 3.53601C7.02636 3.53601 6.02136 4.54101 6.02136 5.78601C6.02136 7.03101 7.02636 8.03601 8.27136 8.03601C9.51636 8.03601 10.5214 7.03101 10.5214 5.78601C10.5214 4.54101 9.51636 3.53601 8.27136 3.53601Z"
                              Fill="White"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Right"
                              Grid.Column="2"
                              Margin="0,0,68.75,0"/>
                        <Path Data="M9.80156 0.943385C9.63579 0.883374 9.45432 0.883374 9.28856 0.943385L1.49304 3.77838L9.54506 6.84587L17.5971 3.77838L9.80156 0.943385Z
                              M10.295 8.16543V18.6737L18.0515 15.8537C18.3478 15.7457 18.545 15.4637 18.545 15.1487V5.02292L10.295 8.16543Z
                              M0.545044 15.1487C0.545044 15.4637 0.742306 15.7457 1.03853 15.8537L8.79502 18.6737V8.16543L0.545044 5.02292V15.1487Z"
                              Stroke="White" 
                              VerticalAlignment="Center"
                              Margin="0,0,40,0"
                              HorizontalAlignment="Right"
                              Grid.Column="2"/>
                        <Path Data="M13.3004 11.3208H12.4874L12.1992 11.0429C13.2078 9.86964 13.815 8.34648 13.815 6.68954C13.815 2.99485 10.8201 0 7.12545 0C3.43077 0 0.435913 2.99485 0.435913 6.68954C0.435913 10.3842 3.43077 13.3791 7.12545 13.3791C8.7824 13.3791 10.3056 12.7719 11.4788 11.7633L11.7567 12.0515V12.8645L16.9025 18L18.4359 16.4666L13.3004 11.3208ZM7.12545 11.3208C4.56284 11.3208 2.49423 9.25214 2.49423 6.68954C2.49423 4.12693 4.56284 2.05832 7.12545 2.05832C9.68806 2.05832 11.7567 4.12693 11.7567 6.68954C11.7567 9.25214 9.68806 11.3208 7.12545 11.3208Z"
                              Fill="White"
                              VerticalAlignment="Center"
                              Margin="0,0,12,0"
                              HorizontalAlignment="Right"
                              Grid.Column="2"/>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"
                                        VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    

</ResourceDictionary>
